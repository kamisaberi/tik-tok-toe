*, *::after, *::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * .9);
}

body {
  margin: 0;
  background-color: #9e9e9e; /* Change the background color for contrast */
}

.board {
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-items: center;
  justify-content: center;
  align-content: center;
  grid-template-columns: repeat(3, var(--cell-size));
  grid-gap: 5px; /* Add some space between cells */
  padding: 5px; /* Add some padding around the board */
  box-shadow: 0px 0px 10px 0px #000000; /* Add shadow for better visibility */
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid #ffffff; /* Make the cell borders white for contrast */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  background-color: #e79de8; /* Set a different background for the cells */
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}

.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  background-color: rgba(217, 28, 234, 0.877);
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: rgb(243, 218, 218);
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * .15);
  height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:hover::after {
  transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute;
  border-radius: 50%;
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * .7);
  height: calc(var(--mark-size) * .7);
  background-color: rgb(222, 216, 216);
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(217, 28, 234, 0.877);
  justify-content: center;
  align-items: center;
  color: white(196, 180, 180);
  font-size: 4rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 2rem;
  color: darkmagenta;
  background-color: white;
  border: 2px solid darkmagenta;
  padding: .25em .5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: darkgray;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}

.restartButton:hover {
  background-color: gray; /* Change color to confirm it's interactable */
}
.startButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  text-align: center;
}

.startButton {
  padding: 10px 20px;
  font-size: 20px;
  cursor: pointer;
}

